spring:
  # 解决 多个接口上的@FeignClient("相同服务名")会报错,overriding is disabled
  main:
    allow-bean-definition-overriding: true
  # 数据源配置
  datasource:
    url: jdbc:mysql://192.168.0.55/cbbs?characterEncoding=utf-8&useSSL=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2b8
    # 数据库用户名
    username: root
    # 数据库驱动类名
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 连接类型
    type: com.alibaba.druid.pool.DruidDataSource
    # 数据库访问密码
    password: root.123
    # 下面为连接池的补充设置
    druid:
      # 初始化大小，最小，最大  
      initial-size: 5
      min-idle: 5
      max-active: 200
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      filter:
        # WallFilter 配置
        wall:
          enabled: true
          # 对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          # 对被认为是攻击的SQL抛出SQLException
          throw-exception: false
          config:
            # 是否允许一次执行多条语句
            multi-statement-allow: true
      # WebStatFilter配置
      web-stat-filter:
        enabled: true
        url-pattern: '/*'
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*,/druid,/info,/health'
        session-stat-enable: false
        # 够监控单个url调用的sql列表
        profile-enable: true
      # StatViewServlet配置
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        # 允许清空统计数据
        reset-enable: true
  # 缓存
  cache:
    type: REDIS
    redis:
      # 是否允许Redis缓存空值
      cache-null-values: true
      # Redis的键前缀
      #key-prefix: 
      # 缓存超时时间戳,配置为0则不设置超时时间
      time-to-live: 0ms
      # 是否启用 Redis 的键前缀
      use-key-prefix: true
  cloud:
    stream:
      default-binder: rabbit
      rabbit:
        bindings:
          gold_user:
            consumer:
              exchangeType: fanout
          gold_customer:
            consumer:
              exchangeType: fanout
      bindings:
        gold_user:
          group: gold_user_handler
        gold_customer:
          group: gold_customer_handler
        

# 打开hystrix端点
management:
  endpoints:
    web:
      exposure:
        include:
        - info
        - health
        - hystrix.stream
            
# 分布式锁
lock:
  enabled: true
          
# Mybatis Plus配置
mybatis-plus:
  mapper-locations: classpath:mybatis/mapper/**/*.xml
  configuration:
    # 配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as
    map-underscore-to-camel-case: true
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
 
# Ribbon配置信息
ribbon:
  # 超时时间,单位:毫秒
  ConnectTimeout: 5000
  ReadTimeout: 30000
  # 默认重试机制(只对GET请求进行重试)
  # 对当前实例的重试次数
  MaxAutoRetries: 0
  # 切换实例的重试次数
  MaxAutoRetriesNextServer: 1
  # 对所有操作请求都进行重试
  OkToRetryOnAllOperations: false
  eager-load:
    enabled: true
    clients:
    
# Feign配置信息
feign:
  client:
    config:
      # 设置全局日志级别
      default:
        # Feign客户端默认的Logger.Level对象定义为NONE级别，不会记录任何Fegin调用过程中的信息
        loggerLevel: full
  # 开启熔断
  hystrix:
    enabled: true
  # 使用 ApacheHttpClient
  httpclient:
    enabled: true 

# Hystrix配置信息
hystrix:
  command:
    # 默认超时时间,建议"Hystrix超时 > Ribbon超时",否则将可能导致重试特性失效
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 31000
              
# 日志配置
logging:
  level:
    com.geeorange.mtms.system.mapper: DEBUG
    com.geeorange.mtms.sms.client: DEBUG
          